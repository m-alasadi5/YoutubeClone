{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\projects\\\\Youtube\\\\clone2\\\\react-youtube-clone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\projects\\\\Youtube\\\\clone2\\\\react-youtube-clone\\\\client\\\\src\\\\components\\\\views\\\\DetailVideoPage\\\\Sections\\\\Subscriber.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../../components/Config.js'; //import Auth from \"../../../../hoc/auth\";\n//import UploadVideoPage from \"../../../views/UploadVideoPage/UploadVideoPage\"\n\nfunction Subscriber(props) {\n  const userTo = props.userTo;\n  const userFrom = props.userFrom;\n\n  const _useState = useState(\"false\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        loggedIn = _useState2[0],\n        setLoginStatus = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        SubscribeNumber = _useState4[0],\n        setSubscribeNumber = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        Subscribed = _useState6[0],\n        setSubscribed = _useState6[1];\n\n  const onSubscribe = () => {\n    let subscribeVariables = {\n      userTo: userTo,\n      userFrom: userFrom\n    };\n\n    if (Subscribed) {\n      //when we are already subscribed \n      axios.post('/api/subscribe/unSubscribe', subscribeVariables).then(response => {\n        if (response.data.success) {\n          setSubscribeNumber(SubscribeNumber - 1);\n          setSubscribed(!Subscribed);\n        } else {\n          alert('Failed to unsubscribe');\n        }\n      });\n    } else {\n      // when we are not subscribed yet\n      axios.post('/api/subscribe/subscribe', subscribeVariables).then(response => {\n        if (response.data.success) {\n          setSubscribeNumber(SubscribeNumber + 1);\n          setSubscribed(!Subscribed);\n        } else {\n          alert('Failed to subscribe');\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    const subscribeNumberVariables = {\n      userTo: userTo,\n      userFrom: userFrom\n    };\n    axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables).then(response => {\n      if (response.data.success) {\n        setSubscribeNumber(response.data.subscribeNumber);\n      } else {\n        alert('Failed to get subscriber Number');\n      }\n    });\n    axios.post('/api/subscribe/subscribed', subscribeNumberVariables).then(response => {\n      if (response.data.success) {\n        setSubscribed(response.data.subcribed);\n      } else {\n        alert('Failed to get Subscribed Information');\n      }\n    });\n  }, []);\n  axios.get(\"\".concat(USER_SERVER, \"/auth\")).then(response => {\n    if (response.data.isAuth === true) {\n      console.log(\"Logged in: true\");\n      setLoginStatus(\"true\");\n    } else {\n      setLoginStatus(\"false\");\n      console.log(\"Logged in: false\");\n    }\n  });\n  if (userTo === userFrom) return \"\";else if (loggedIn === false) {\n    return \"\";\n  } else if (loggedIn === \"true\") return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: onSubscribe,\n    style: {\n      backgroundColor: \"\".concat(Subscribed ? '#AAAAAA' : '#CC0000'),\n      borderRadius: '4px',\n      color: 'white',\n      padding: '10px 16px',\n      fontWeight: '500',\n      fontSize: '1rem',\n      textTransform: 'uppercase'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, SubscribeNumber, \" \", Subscribed ? 'Subscribed' : 'Subscribe'));else return \"\";\n}\n\nexport default Subscriber;","map":{"version":3,"sources":["C:\\Users\\mustafa\\Desktop\\projects\\Youtube\\clone2\\react-youtube-clone\\client\\src\\components\\views\\DetailVideoPage\\Sections\\Subscriber.js"],"names":["React","useEffect","useState","axios","USER_SERVER","Subscriber","props","userTo","userFrom","loggedIn","setLoginStatus","SubscribeNumber","setSubscribeNumber","Subscribed","setSubscribed","onSubscribe","subscribeVariables","post","then","response","data","success","alert","subscribeNumberVariables","subscribeNumber","subcribed","get","isAuth","console","log","backgroundColor","borderRadius","color","padding","fontWeight","fontSize","textTransform"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { USER_SERVER } from '../../../../components/Config.js';\r\n//import Auth from \"../../../../hoc/auth\";\r\n//import UploadVideoPage from \"../../../views/UploadVideoPage/UploadVideoPage\"\r\n\r\nfunction Subscriber(props) {\r\n    const userTo = props.userTo\r\n    const userFrom = props.userFrom\r\n    const [loggedIn, setLoginStatus] = useState(\"false\")\r\n\r\n    const [SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [Subscribed, setSubscribed] = useState(false)\r\n\r\n    const onSubscribe = ( ) => {\r\n\r\n        let subscribeVariables = {\r\n                userTo : userTo,\r\n                userFrom : userFrom\r\n        }\r\n\r\n        if(Subscribed) {\r\n            //when we are already subscribed \r\n            axios.post('/api/subscribe/unSubscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success){ \r\n                        setSubscribeNumber(SubscribeNumber - 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to unsubscribe')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            // when we are not subscribed yet\r\n            \r\n            axios.post('/api/subscribe/subscribe', subscribeVariables)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber + 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('Failed to subscribe')\r\n                    }\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        \r\n\r\n        const subscribeNumberVariables = { userTo: userTo, userFrom: userFrom }\r\n        axios.post('/api/subscribe/subscribeNumber', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribeNumber(response.data.subscribeNumber)\r\n                } else {\r\n                    alert('Failed to get subscriber Number')\r\n                }\r\n            })\r\n\r\n        axios.post('/api/subscribe/subscribed', subscribeNumberVariables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribed(response.data.subcribed)\r\n                } else {\r\n                    alert('Failed to get Subscribed Information')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n    axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => {\r\n        if(response.data.isAuth===true){\r\n     console.log(\"Logged in: true\");\r\n\r\n     setLoginStatus(\"true\");\r\n    \r\n\r\n\r\n\r\n        }\r\n\r\n        else {\r\n            setLoginStatus(\"false\");\r\n            console.log(\"Logged in: false\");\r\n        }\r\n\r\n    })\r\n\r\n\r\n \r\n\r\n\r\nif(userTo===userFrom)\r\n\r\nreturn \"\"\r\n\r\nelse if (loggedIn===false){\r\n\r\n    return \"\"\r\n\r\n}\r\n\r\nelse if (loggedIn===\"true\")\r\n\r\n    return (\r\n        <div>\r\n            <button \r\n            onClick={onSubscribe}\r\n            style={{\r\n                backgroundColor: `${Subscribed ? '#AAAAAA' : '#CC0000'}`,\r\n                borderRadius: '4px', color: 'white',\r\n                padding: '10px 16px', fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase'\r\n            }}>\r\n                {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n\r\n    else return \"\"\r\n\r\n    \r\n}\r\n\r\nexport default Subscriber\r\n\r\n"]},"metadata":{},"sourceType":"module"}