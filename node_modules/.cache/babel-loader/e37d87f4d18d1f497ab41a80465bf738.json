{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\projects\\\\Youtube\\\\clone2\\\\react-youtube-clone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\projects\\\\Youtube\\\\clone2\\\\react-youtube-clone\\\\client\\\\src\\\\components\\\\views\\\\DetailVideoPage\\\\Sections\\\\Comments.js\";\nimport React, { useState } from 'react';\nimport { Button, Input } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nconst TextArea = Input.TextArea;\n\nfunction Comments(props) {\n  const user = useSelector(state => state.user);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        Comment = _useState2[0],\n        setComment = _useState2[1];\n\n  const handleChange = e => {\n    setComment(e.currentTarget.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const variables = {\n      content: Comment,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        setComment(\"\");\n        props.refreshFunction(response.data.result);\n      } else {\n        alert('Failed to save Comment');\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" replies\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), console.log(props.CommentLists), props.CommentLists && props.CommentLists.map((comment, index) => !comment.responseTo && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(SingleComment, {\n    comment: comment,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(ReplyComment, {\n    CommentLists: props.CommentLists,\n    postId: props.postId,\n    parentCommentId: comment._id,\n    refreshFunction: props.refreshFunction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"form\", {\n    style: {\n      display: 'flex'\n    },\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    style: {\n      width: '100%',\n      borderRadius: '5px'\n    },\n    onChange: handleChange,\n    value: Comment,\n    placeholder: \"write some comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {\n      width: '20%',\n      height: '52px'\n    },\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:\\Users\\mustafa\\Desktop\\projects\\Youtube\\clone2\\react-youtube-clone\\client\\src\\components\\views\\DetailVideoPage\\Sections\\Comments.js"],"names":["React","useState","Button","Input","axios","useSelector","SingleComment","ReplyComment","TextArea","Comments","props","user","state","Comment","setComment","handleChange","e","currentTarget","value","onSubmit","preventDefault","variables","content","writer","userData","_id","postId","post","then","response","data","success","refreshFunction","result","alert","console","log","CommentLists","map","comment","index","responseTo","display","width","borderRadius","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Input } from 'antd';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport SingleComment from './SingleComment';\r\nimport ReplyComment from './ReplyComment';\r\nconst { TextArea } = Input;\r\n\r\nfunction Comments(props) {\r\n    const user = useSelector(state => state.user)\r\n    const [Comment, setComment] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        setComment(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variables = {\r\n            content: Comment,\r\n            writer: user.userData._id,\r\n            postId: props.postId\r\n        }\r\n\r\n        axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setComment(\"\")\r\n                    props.refreshFunction(response.data.result)\r\n                } else {\r\n                    alert('Failed to save Comment')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <p> replies</p>\r\n            <hr />\r\n            {/* Comment Lists  */}\r\n            {console.log(props.CommentLists)}\r\n\r\n            {props.CommentLists && props.CommentLists.map((comment, index) => (\r\n                (!comment.responseTo &&\r\n                    <React.Fragment>\r\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\r\n                        <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\r\n                    </React.Fragment>\r\n                )\r\n            ))}\r\n\r\n\r\n\r\n            {/* Root Comment Form */}\r\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <TextArea\r\n                    style={{ width: '100%', borderRadius: '5px' }}\r\n                    onChange={handleChange}\r\n                    value={Comment}\r\n                    placeholder=\"write some comments\"\r\n                />\r\n                <br />\r\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n"]},"metadata":{},"sourceType":"module"}