{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\projects\\\\Youtube\\\\clone2\\\\react-youtube-clone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\projects\\\\Youtube\\\\clone2\\\\react-youtube-clone\\\\client\\\\src\\\\components\\\\views\\\\UploadVideoPage\\\\UploadVideoPage.js\";\nimport React, { useState } from 'react';\nimport { Typography, Button, Form, Input, Icon } from 'antd';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { useSelector } from \"react-redux\";\nconst Title = Typography.Title;\nconst TextArea = Input.TextArea;\nconst Private = [{\n  value: 0,\n  label: 'Private'\n}, {\n  value: 1,\n  label: 'Public'\n}];\nconst Catogory = [{\n  value: 0,\n  label: \"Film & Animation\"\n}, {\n  value: 0,\n  label: \"Autos & Vehicles\"\n}, {\n  value: 0,\n  label: \"Music\"\n}, {\n  value: 0,\n  label: \"Pets & Animals\"\n}, {\n  value: 0,\n  label: \"Sports\"\n}];\n\nfunction UploadVideoPage(props) {\n  const user = useSelector(state => state.user);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Description = _useState4[0],\n        setDescription = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        privacy = _useState6[0],\n        setPrivacy = _useState6[1];\n\n  const _useState7 = useState(\"Film & Animation\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        Categories = _useState8[0],\n        setCategories = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        FilePath = _useState10[0],\n        setFilePath = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        Duration = _useState12[0],\n        setDuration = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        Thumbnail = _useState14[0],\n        setThumbnail = _useState14[1];\n\n  const handleChangeTitle = event => {\n    setTitle(event.currentTarget.value);\n  };\n\n  const handleChangeDecsription = event => {\n    console.log(event.currentTarget.value);\n    setDescription(event.currentTarget.value);\n  };\n\n  const handleChangeOne = event => {\n    setPrivacy(event.currentTarget.value);\n  };\n\n  const handleChangeTwo = event => {\n    setCategories(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (user.userData && !user.userData.isAuth) {\n      return alert('Please Log in First');\n    }\n\n    if (title === \"\" || Description === \"\" || Categories === \"\" || FilePath === \"\" || Duration === \"\" || Thumbnail === \"\") {\n      return alert('Please first fill all the fields');\n    }\n\n    const variables = {\n      writer: user.userData._id,\n      title: title,\n      description: Description,\n      privacy: privacy,\n      filePath: FilePath,\n      category: Categories,\n      duration: Duration,\n      thumbnail: Thumbnail\n    };\n    axios.post('/api/video/uploadVideo', variables).then(response => {\n      if (response.data.success) {\n        alert('video Uploaded Successfully');\n        props.history.push('/');\n      } else {\n        alert('Failed to upload video');\n      }\n    });\n  };\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    console.log(files);\n    formData.append(\"file\", files[0]);\n    axios.post('/api/video/uploadfiles', formData, config).then(response => {\n      if (response.data.success) {\n        let variable = {\n          filePath: response.data.filePath,\n          fileName: response.data.fileName\n        };\n        setFilePath(response.data.filePath); //gerenate thumbnail with this filepath ! \n\n        axios.post('/api/video/thumbnail', variable).then(response => {\n          if (response.data.success) {\n            setDuration(response.data.fileDuration);\n            setThumbnail(response.data.thumbsFilePath);\n          } else {\n            alert('Failed to make the thumbnails');\n          }\n        });\n      } else {\n        alert('failed to save the video in server');\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Title, {\n    level: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \" Upload Video\")), React.createElement(Form, {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: 800000000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => React.createElement(\"div\", Object.assign({\n    style: {\n      width: '300px',\n      height: '240px',\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), React.createElement(Icon, {\n    type: \"plus\",\n    style: {\n      fontSize: '3rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }))), Thumbnail !== \"\" && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"http://localhost:5000/\".concat(Thumbnail),\n    alt: \"haha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Input, {\n    onChange: handleChangeTitle,\n    value: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Description\"), React.createElement(TextArea, {\n    onChange: handleChangeDecsription,\n    value: Description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    onChange: handleChangeOne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, Private.map((item, index) => React.createElement(\"option\", {\n    key: index,\n    value: item.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, item.label))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    onChange: handleChangeTwo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, Catogory.map((item, index) => React.createElement(\"option\", {\n    key: index,\n    value: item.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, item.label))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    size: \"large\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nexport default UploadVideoPage;","map":{"version":3,"sources":["C:\\Users\\mustafa\\Desktop\\projects\\Youtube\\clone2\\react-youtube-clone\\client\\src\\components\\views\\UploadVideoPage\\UploadVideoPage.js"],"names":["React","useState","Typography","Button","Form","Input","Icon","Dropzone","axios","useSelector","Title","TextArea","Private","value","label","Catogory","UploadVideoPage","props","user","state","title","setTitle","Description","setDescription","privacy","setPrivacy","Categories","setCategories","FilePath","setFilePath","Duration","setDuration","Thumbnail","setThumbnail","handleChangeTitle","event","currentTarget","handleChangeDecsription","console","log","handleChangeOne","handleChangeTwo","onSubmit","preventDefault","userData","isAuth","alert","variables","writer","_id","description","filePath","category","duration","thumbnail","post","then","response","data","success","history","push","onDrop","files","formData","FormData","config","header","append","variable","fileName","fileDuration","thumbsFilePath","maxWidth","margin","textAlign","marginBottom","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","fontSize","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Typography, Button, Form,  Input, Icon } from 'antd';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst Private = [\r\n    { value: 0, label: 'Private' },\r\n    { value: 1, label: 'Public' }\r\n]\r\n\r\nconst Catogory = [\r\n    { value: 0, label: \"Film & Animation\" },\r\n    { value: 0, label: \"Autos & Vehicles\" },\r\n    { value: 0, label: \"Music\" },\r\n    { value: 0, label: \"Pets & Animals\" },\r\n    { value: 0, label: \"Sports\" },\r\n]\r\n\r\nfunction UploadVideoPage(props) {\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [Description, setDescription] = useState(\"\");\r\n    const [privacy, setPrivacy] = useState(0)\r\n    const [Categories, setCategories] = useState(\"Film & Animation\")\r\n    const [FilePath, setFilePath] = useState(\"\")\r\n    const [Duration, setDuration] = useState(\"\")\r\n    const [Thumbnail, setThumbnail] = useState(\"\")\r\n\r\n\r\n    const handleChangeTitle = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeDecsription = (event) => {\r\n        console.log(event.currentTarget.value)\r\n\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeOne = (event) => {\r\n        setPrivacy(event.currentTarget.value)\r\n    }\r\n\r\n    const handleChangeTwo = (event) => {\r\n        setCategories(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (user.userData && !user.userData.isAuth) {\r\n            return alert('Please Log in First')\r\n        }\r\n\r\n        if (title === \"\" || Description === \"\" ||\r\n            Categories === \"\" || FilePath === \"\" ||\r\n            Duration === \"\" || Thumbnail === \"\") {\r\n            return alert('Please first fill all the fields')\r\n        }\r\n\r\n        const variables = {\r\n            writer: user.userData._id,\r\n            title: title,\r\n            description: Description,\r\n            privacy: privacy,\r\n            filePath: FilePath,\r\n            category: Categories,\r\n            duration: Duration,\r\n            thumbnail: Thumbnail\r\n        }\r\n\r\n        axios.post('/api/video/uploadVideo', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('video Uploaded Successfully')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('Failed to upload video')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    const onDrop = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files)\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/video/uploadfiles', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n\r\n                    let variable = {\r\n                        filePath: response.data.filePath,\r\n                        fileName: response.data.fileName\r\n                    }\r\n                    setFilePath(response.data.filePath)\r\n\r\n                    //gerenate thumbnail with this filepath ! \r\n\r\n                    axios.post('/api/video/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setDuration(response.data.fileDuration)\r\n                                setThumbnail(response.data.thumbsFilePath)\r\n                            } else {\r\n                                alert('Failed to make the thumbnails');\r\n                            }\r\n                        })\r\n\r\n\r\n                } else {\r\n                    alert('failed to save the video in server')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2} > Upload Video</Title>\r\n            </div>\r\n\r\n            <Form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <Dropzone\r\n                        onDrop={onDrop}\r\n                        multiple={false}\r\n                        maxSize={800000000}>\r\n                        {({ getRootProps, getInputProps }) => (\r\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                {...getRootProps()}\r\n                            >\r\n                                <input {...getInputProps()} />\r\n                                <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n\r\n                    {Thumbnail !== \"\" &&\r\n                        <div>\r\n                            <img src={`http://localhost:5000/${Thumbnail}`} alt=\"haha\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                <br /><br />\r\n                <label>Title</label>\r\n                <Input\r\n                    onChange={handleChangeTitle}\r\n                    value={title}\r\n                />\r\n                <br /><br />\r\n                <label>Description</label>\r\n                <TextArea\r\n                    onChange={handleChangeDecsription}\r\n                    value={Description}\r\n                />\r\n                <br /><br />\r\n\r\n                <select onChange={handleChangeOne}>\r\n                    {Private.map((item, index) => (\r\n                        <option key={index} value={item.value}>{item.label}</option>\r\n                    ))}\r\n                </select>\r\n                <br /><br />\r\n\r\n                <select onChange={handleChangeTwo}>\r\n                    {Catogory.map((item, index) => (\r\n                        <option key={index} value={item.label}>{item.label}</option>\r\n                    ))}\r\n                </select>\r\n                <br /><br />\r\n\r\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n                    Submit\r\n            </Button>\r\n\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadVideoPage\r\n"]},"metadata":{},"sourceType":"module"}