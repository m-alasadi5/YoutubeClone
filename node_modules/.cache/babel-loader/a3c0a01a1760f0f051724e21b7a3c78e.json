{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\projects\\\\Youtube\\\\clone2\\\\react-youtube-clone\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\projects\\\\Youtube\\\\clone2\\\\react-youtube-clone\\\\client\\\\src\\\\components\\\\views\\\\DetailVideoPage\\\\Sections\\\\LikeDislikes.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Tooltip, Icon } from 'antd';\nimport Axios from 'axios';\n\nfunction LikeDislikes(props) {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        Likes = _useState2[0],\n        setLikes = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Dislikes = _useState4[0],\n        setDislikes = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        LikeAction = _useState6[0],\n        setLikeAction = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        DislikeAction = _useState8[0],\n        setDislikeAction = _useState8[1];\n\n  let variable = {};\n\n  if (props.video) {\n    variable = {\n      videoId: props.videoId,\n      userId: props.userId\n    };\n  } else {\n    variable = {\n      commentId: props.commentId,\n      userId: props.userId\n    };\n  }\n\n  useEffect(() => {\n    Axios.post('/api/like/getLikes', variable).then(response => {\n      console.log('getLikes', response.data);\n\n      if (response.data.success) {\n        //How many likes does this video or comment have \n        setLikes(response.data.likes.length); //if I already click this like button or not \n\n        response.data.likes.map(like => {\n          if (like.userId === props.userId) {\n            setLikeAction('liked');\n          }\n        });\n      } else {\n        alert('Failed to get likes');\n      }\n    });\n    Axios.post('/api/like/getDislikes', variable).then(response => {\n      console.log('getDislike', response.data);\n\n      if (response.data.success) {\n        //How many likes does this video or comment have \n        setDislikes(response.data.dislikes.length); //if I already click this like button or not \n\n        response.data.dislikes.map(dislike => {\n          if (dislike.userId === props.userId) {\n            setDislikeAction('disliked');\n          }\n        });\n      } else {\n        alert('Failed to get dislikes');\n      }\n    });\n  }, []);\n\n  const onLike = () => {\n    if (LikeAction === null) {\n      Axios.post('/api/like/upLike', variable).then(response => {\n        if (response.data.success) {\n          setLikes(Likes + 1);\n          setLikeAction('liked'); //If dislike button is already clicked\n\n          if (DislikeAction !== null) {\n            setDislikeAction(null);\n            setDislikes(Dislikes - 1);\n          }\n        } else {\n          alert('Failed to increase the like');\n        }\n      });\n    } else {\n      Axios.post('/api/like/unLike', variable).then(response => {\n        if (response.data.success) {\n          setLikes(Likes - 1);\n          setLikeAction(null);\n        } else {\n          alert('Failed to decrease the like');\n        }\n      });\n    }\n  };\n\n  const onDisLike = () => {\n    if (DislikeAction !== null) {\n      Axios.post('/api/like/unDisLike', variable).then(response => {\n        if (response.data.success) {\n          setDislikes(Dislikes - 1);\n          setDislikeAction(null);\n        } else {\n          alert('Failed to decrease dislike');\n        }\n      });\n    } else {\n      Axios.post('/api/like/upDisLike', variable).then(response => {\n        if (response.data.success) {\n          setDislikes(Dislikes + 1);\n          setDislikeAction('disliked'); //If dislike button is already clicked\n\n          if (LikeAction !== null) {\n            setLikeAction(null);\n            setLikes(Likes - 1);\n          }\n        } else {\n          alert('Failed to increase dislike');\n        }\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    key: \"comment-basic-like\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"Like\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"like\",\n    theme: LikeAction === 'liked' ? 'filled' : 'outlined',\n    onClick: onLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    style: {\n      paddingLeft: '8px',\n      cursor: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, Likes)), \"\\xA0\\xA0\", React.createElement(\"span\", {\n    key: \"comment-basic-dislike\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    title: \"Dislike\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"dislike\",\n    theme: DislikeAction === 'disliked' ? 'filled' : 'outlined',\n    onClick: onDisLike,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    style: {\n      paddingLeft: '8px',\n      cursor: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, Dislikes)));\n}\n\nexport default LikeDislikes;","map":{"version":3,"sources":["C:\\Users\\mustafa\\Desktop\\projects\\Youtube\\clone2\\react-youtube-clone\\client\\src\\components\\views\\DetailVideoPage\\Sections\\LikeDislikes.js"],"names":["React","useEffect","useState","Tooltip","Icon","Axios","LikeDislikes","props","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DislikeAction","setDislikeAction","variable","video","videoId","userId","commentId","post","then","response","console","log","data","success","likes","length","map","like","alert","dislikes","dislike","onLike","onDisLike","paddingLeft","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Tooltip, Icon } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction LikeDislikes(props) {\r\n\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n    let variable = {};\r\n\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId }\r\n    } else {\r\n        variable = { commentId: props.commentId, userId: props.userId }\r\n    }\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.post('/api/like/getLikes', variable)\r\n            .then(response => {\r\n                console.log('getLikes',response.data)\r\n\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setLikes(response.data.likes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get likes')\r\n                }\r\n            })\r\n\r\n        Axios.post('/api/like/getDislikes', variable)\r\n            .then(response => {\r\n                console.log('getDislike',response.data)\r\n                if (response.data.success) {\r\n                    //How many likes does this video or comment have \r\n                    setDislikes(response.data.dislikes.length)\r\n\r\n                    //if I already click this like button or not \r\n                    response.data.dislikes.map(dislike => {\r\n                        if (dislike.userId === props.userId) {\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Failed to get dislikes')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n\r\n    const onLike = () => {\r\n\r\n        if (LikeAction === null) {\r\n\r\n            Axios.post('/api/like/upLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes + 1)\r\n                        setLikeAction('liked')\r\n\r\n                        //If dislike button is already clicked\r\n\r\n                        if (DislikeAction !== null) {\r\n                            setDislikeAction(null)\r\n                            setDislikes(Dislikes - 1)\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        alert('Failed to increase the like')\r\n                    }\r\n                })\r\n\r\n\r\n        } else {\r\n\r\n            Axios.post('/api/like/unLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease the like')\r\n                    }\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const onDisLike = () => {\r\n\r\n        if (DislikeAction !== null) {\r\n\r\n            Axios.post('/api/like/unDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes - 1)\r\n                        setDislikeAction(null)\r\n\r\n                    } else {\r\n                        alert('Failed to decrease dislike')\r\n                    }\r\n                })\r\n\r\n        } else {\r\n\r\n            Axios.post('/api/like/upDisLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        setDislikes(Dislikes + 1)\r\n                        setDislikeAction('disliked')\r\n\r\n                        //If dislike button is already clicked\r\n                        if(LikeAction !== null ) {\r\n                            setLikeAction(null)\r\n                            setLikes(Likes - 1)\r\n                        }\r\n\r\n                    } else {\r\n                        alert('Failed to increase dislike')\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    <Icon type=\"like\"\r\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\r\n                        onClick={onLike} />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\r\n            </span>&nbsp;&nbsp;\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    <Icon\r\n                        type=\"dislike\"\r\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\r\n                        onClick={onDisLike}\r\n                    />\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\r\n            </span>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes\r\n"]},"metadata":{},"sourceType":"module"}